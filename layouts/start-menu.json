{
  "b": 0,
  "disableInputWhenNotFocused": true,
  "mangledName": "Start_32Menu",
  "name": "Start Menu",
  "r": 0,
  "standardSortMethod": true,
  "stopSoundsOnStartup": true,
  "title": "",
  "v": 0,
  "uiSettings": {
    "grid": false,
    "gridType": "rectangular",
    "gridWidth": 32,
    "gridHeight": 32,
    "gridOffsetX": 0,
    "gridOffsetY": 0,
    "gridColor": 10401023,
    "gridAlpha": 0.8,
    "snap": false,
    "zoomFactor": 0.5468750000000016,
    "windowMask": false
  },
  "objectsGroups": [],
  "variables": [
    {
      "name": "Client",
      "type": "structure",
      "children": [
        {
          "folded": true,
          "name": "Name",
          "type": "string",
          "value": ""
        },
        {
          "folded": true,
          "name": "PlayerNumber",
          "type": "number",
          "value": 0
        },
        {
          "name": "Session_ID",
          "type": "string",
          "value": ""
        }
      ]
    },
    {
      "folded": true,
      "name": "temp",
      "type": "string",
      "value": ""
    },
    {
      "folded": true,
      "name": "return",
      "type": "string",
      "value": ""
    },
    {
      "folded": true,
      "name": "ServerList",
      "type": "structure",
      "children": [
        {
          "folded": true,
          "name": "Pool",
          "type": "array",
          "children": []
        },
        {
          "folded": true,
          "name": "Rooms",
          "type": "array",
          "children": []
        },
        {
          "folded": true,
          "name": "Root",
          "type": "array",
          "children": [
            {
              "folded": true,
              "type": "array",
              "children": []
            }
          ]
        },
        {
          "folded": true,
          "name": "temp",
          "type": "string",
          "value": ""
        }
      ]
    },
    {
      "folded": true,
      "name": "F_UID",
      "type": "string",
      "value": ""
    },
    {
      "folded": true,
      "name": "Variable",
      "type": "string",
      "value": "2"
    }
  ],
  "instances": [
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 60,
      "layer": "",
      "name": "Input_name",
      "persistentUuid": "649b9d3e-04f1-47f8-a8e1-22efcb5bfbc5",
      "width": 491,
      "x": 386,
      "y": 259,
      "zOrder": 1,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 32,
      "height": 64,
      "layer": "",
      "name": "button_ok",
      "persistentUuid": "1328a3e9-3969-4377-8c1a-379e050122cc",
      "width": 105,
      "x": 575,
      "y": 363,
      "zOrder": 2,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 32,
      "height": 82,
      "layer": "",
      "name": "check_saving_name",
      "persistentUuid": "29cebbf7-1ee0-4ac5-bd63-bffd7a172d26",
      "width": 78,
      "x": 383,
      "y": 454,
      "zOrder": 3,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": true,
      "depth": 1,
      "height": 122,
      "layer": "",
      "name": "DefaultBBText",
      "persistentUuid": "944d61d5-8834-497d-b71d-8d4b4c3db4bf",
      "width": 419,
      "x": 495,
      "y": 457,
      "zOrder": 4,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    },
    {
      "angle": 0,
      "customSize": false,
      "height": 0,
      "layer": "",
      "name": "workingtext",
      "persistentUuid": "f81c7517-b4a3-43da-ad27-3fbd10b32c93",
      "width": 0,
      "x": 52,
      "y": 106,
      "zOrder": 5,
      "numberProperties": [],
      "stringProperties": [],
      "initialVariables": []
    }
  ],
  "objects": [
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "TXT_Room",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [
        {
          "folded": true,
          "name": "ID",
          "type": "string",
          "value": ""
        }
      ],
      "effects": [],
      "behaviors": [
        {
          "name": "ButtonFSM",
          "type": "ButtonStates::ButtonFSM",
          "ShouldCheckHovering": true,
          "State": "Idle",
          "TouchId": 0,
          "TouchIsInside": false,
          "MouseIsInside": false,
          "Index": 2.0247e-320
        },
        {
          "name": "ButtonObjectEffects",
          "type": "ButtonStates::ButtonObjectEffects",
          "ButtonFSM": "ButtonFSM",
          "Effect": "Effect",
          "IdleEffect": "",
          "FocusedEffect": "",
          "PressedEffect": ""
        },
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "string": "Text",
      "font": "",
      "textAlignment": "center",
      "characterSize": 48,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "content": {
        "bold": true,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "Text",
        "font": "",
        "textAlignment": "center",
        "characterSize": 48,
        "color": "255;255;255"
      }
    },
    {
      "assetStoreId": "f0c3d7ae6099e3b9b8beed4e30b555107550b4fb2a5879e984a014b1e06865bf",
      "name": "button_host",
      "type": "PanelSpriteButton::PanelSpriteButton",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "LeftPadding": 0,
        "RightPadding": 0,
        "PressedLabelOffsetY": 4,
        "BottomPadding": 6,
        "TopPadding": 0,
        "HoveredFadeOutDuration": 0
      },
      "childrenContent": {
        "Hovered": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Hovered.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Idle": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Idle.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Label": {
          "bold": false,
          "italic": false,
          "smoothed": true,
          "underlined": false,
          "string": "Host ",
          "font": "Kenney Mini Square.ttf",
          "textAlignment": "center",
          "characterSize": 45,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          },
          "content": {
            "bold": false,
            "isOutlineEnabled": false,
            "isShadowEnabled": false,
            "italic": false,
            "outlineColor": "255;255;255",
            "outlineThickness": 2,
            "shadowAngle": 90,
            "shadowBlurRadius": 2,
            "shadowColor": "0;0;0",
            "shadowDistance": 4,
            "shadowOpacity": 127,
            "smoothed": true,
            "underlined": false,
            "text": "Host ",
            "font": "Kenney Mini Square.ttf",
            "textAlignment": "center",
            "characterSize": 45,
            "color": "255;255;255"
          }
        },
        "Pressed": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Pressed.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        }
      }
    },
    {
      "assetStoreId": "f0c3d7ae6099e3b9b8beed4e30b555107550b4fb2a5879e984a014b1e06865bf",
      "name": "button_Room",
      "type": "PanelSpriteButton::PanelSpriteButton",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "LeftPadding": 0,
        "RightPadding": 0,
        "PressedLabelOffsetY": 4,
        "BottomPadding": 6,
        "TopPadding": 0,
        "HoveredFadeOutDuration": 0
      },
      "childrenContent": {
        "Hovered": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Hovered.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Idle": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Idle.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Label": {
          "bold": false,
          "italic": false,
          "smoothed": true,
          "underlined": false,
          "string": "Room List",
          "font": "Kenney Mini Square.ttf",
          "textAlignment": "center",
          "characterSize": 45,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          },
          "content": {
            "bold": false,
            "isOutlineEnabled": false,
            "isShadowEnabled": false,
            "italic": false,
            "outlineColor": "255;255;255",
            "outlineThickness": 2,
            "shadowAngle": 90,
            "shadowBlurRadius": 2,
            "shadowColor": "0;0;0",
            "shadowDistance": 4,
            "shadowOpacity": 127,
            "smoothed": true,
            "underlined": false,
            "text": "Room List",
            "font": "Kenney Mini Square.ttf",
            "textAlignment": "center",
            "characterSize": 45,
            "color": "255;255;255"
          }
        },
        "Pressed": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Pressed.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        }
      }
    },
    {
      "assetStoreId": "",
      "name": "Input_name",
      "type": "TextInput::TextInputObject",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "initialValue": "",
        "placeholder": "         Nickname",
        "fontResourceName": "",
        "fontSize": 48,
        "inputType": "text",
        "textColor": "0;0;0",
        "fillColor": "255;255;255",
        "fillOpacity": 255,
        "borderColor": "0;0;0",
        "borderOpacity": 255,
        "borderWidth": 1,
        "readOnly": false,
        "disabled": false
      }
    },
    {
      "assetStoreId": "f0c3d7ae6099e3b9b8beed4e30b555107550b4fb2a5879e984a014b1e06865bf",
      "name": "button_ok",
      "type": "PanelSpriteButton::PanelSpriteButton",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "LeftPadding": 0,
        "RightPadding": 0,
        "PressedLabelOffsetY": 4,
        "BottomPadding": 6,
        "TopPadding": 0,
        "HoveredFadeOutDuration": 0
      },
      "childrenContent": {
        "Hovered": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Hovered.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Idle": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Idle.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Label": {
          "bold": false,
          "italic": false,
          "smoothed": true,
          "underlined": false,
          "string": "ok",
          "font": "Kenney Mini Square.ttf",
          "textAlignment": "center",
          "characterSize": 45,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          },
          "content": {
            "bold": false,
            "isOutlineEnabled": false,
            "isShadowEnabled": false,
            "italic": false,
            "outlineColor": "255;255;255",
            "outlineThickness": 2,
            "shadowAngle": 90,
            "shadowBlurRadius": 2,
            "shadowColor": "0;0;0",
            "shadowDistance": 4,
            "shadowOpacity": 127,
            "smoothed": true,
            "underlined": false,
            "text": "ok",
            "font": "Kenney Mini Square.ttf",
            "textAlignment": "center",
            "characterSize": 45,
            "color": "255;255;255"
          }
        },
        "Pressed": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Pressed.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        }
      }
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "error",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [
        {
          "folded": true,
          "name": "ID",
          "type": "string",
          "value": ""
        }
      ],
      "effects": [],
      "behaviors": [
        {
          "name": "ButtonFSM",
          "type": "ButtonStates::ButtonFSM",
          "ShouldCheckHovering": true,
          "State": "Idle",
          "TouchId": 0,
          "TouchIsInside": false,
          "MouseIsInside": false,
          "Index": 2.0247e-320
        },
        {
          "name": "ButtonObjectEffects",
          "type": "ButtonStates::ButtonObjectEffects",
          "ButtonFSM": "ButtonFSM",
          "Effect": "Effect",
          "IdleEffect": "",
          "FocusedEffect": "",
          "PressedEffect": ""
        },
        {
          "name": "Flash",
          "type": "Flash::Flash",
          "HalfPeriodTime": 0.3,
          "IsFlashing": false,
          "FlashDuration": 0
        },
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "string": "Text",
      "font": "",
      "textAlignment": "center",
      "characterSize": 48,
      "color": {
        "b": 27,
        "g": 2,
        "r": 208
      },
      "content": {
        "bold": true,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "Text",
        "font": "",
        "textAlignment": "center",
        "characterSize": 48,
        "color": "208;2;27"
      }
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "Text_name",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [
        {
          "folded": true,
          "name": "ID",
          "type": "string",
          "value": ""
        }
      ],
      "effects": [],
      "behaviors": [
        {
          "name": "ButtonFSM",
          "type": "ButtonStates::ButtonFSM",
          "ShouldCheckHovering": true,
          "State": "Idle",
          "TouchId": 0,
          "TouchIsInside": false,
          "MouseIsInside": false,
          "Index": 2.0247e-320
        },
        {
          "name": "ButtonObjectEffects",
          "type": "ButtonStates::ButtonObjectEffects",
          "ButtonFSM": "ButtonFSM",
          "Effect": "Effect",
          "IdleEffect": "",
          "FocusedEffect": "",
          "PressedEffect": ""
        },
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "string": "Text",
      "font": "",
      "textAlignment": "center",
      "characterSize": 48,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "content": {
        "bold": true,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "Text",
        "font": "",
        "textAlignment": "center",
        "characterSize": 48,
        "color": "255;255;255"
      }
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "text_warning",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [
        {
          "folded": true,
          "name": "ID",
          "type": "string",
          "value": ""
        }
      ],
      "effects": [],
      "behaviors": [
        {
          "name": "ButtonFSM",
          "type": "ButtonStates::ButtonFSM",
          "ShouldCheckHovering": true,
          "State": "Idle",
          "TouchId": 0,
          "TouchIsInside": false,
          "MouseIsInside": false,
          "Index": 2.0247e-320
        },
        {
          "name": "ButtonObjectEffects",
          "type": "ButtonStates::ButtonObjectEffects",
          "ButtonFSM": "ButtonFSM",
          "Effect": "Effect",
          "IdleEffect": "",
          "FocusedEffect": "",
          "PressedEffect": ""
        },
        {
          "name": "Flash",
          "type": "Flash::Flash",
          "HalfPeriodTime": 0.3,
          "IsFlashing": false,
          "FlashDuration": 0
        },
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "string": "",
      "font": "",
      "textAlignment": "center",
      "characterSize": 48,
      "color": {
        "b": 35,
        "g": 166,
        "r": 245
      },
      "content": {
        "bold": true,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "",
        "font": "",
        "textAlignment": "center",
        "characterSize": 48,
        "color": "245;166;35"
      }
    },
    {
      "assetStoreId": "f0c3d7ae6099e3b9b8beed4e30b555107550b4fb2a5879e984a014b1e06865bf",
      "name": "button_Refresh",
      "type": "PanelSpriteButton::PanelSpriteButton",
      "variables": [],
      "effects": [
        {
          "effectType": "ColorReplace",
          "name": "Effect",
          "doubleParameters": {
            "epsilon": 0.4
          },
          "stringParameters": {
            "newColor": "184;233;134",
            "originalColor": "255;255;255"
          },
          "booleanParameters": {}
        }
      ],
      "behaviors": [],
      "content": {
        "LeftPadding": 0,
        "RightPadding": 0,
        "PressedLabelOffsetY": 4,
        "BottomPadding": 6,
        "TopPadding": 0,
        "HoveredFadeOutDuration": 0
      },
      "childrenContent": {
        "Hovered": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Hovered.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Idle": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Idle.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        },
        "Label": {
          "bold": false,
          "italic": false,
          "smoothed": true,
          "underlined": false,
          "string": "Refresh",
          "font": "Kenney Mini Square.ttf",
          "textAlignment": "center",
          "characterSize": 24,
          "color": {
            "b": 255,
            "g": 255,
            "r": 255
          },
          "content": {
            "bold": false,
            "isOutlineEnabled": false,
            "isShadowEnabled": false,
            "italic": false,
            "outlineColor": "255;255;255",
            "outlineThickness": 2,
            "shadowAngle": 90,
            "shadowBlurRadius": 2,
            "shadowColor": "0;0;0",
            "shadowDistance": 4,
            "shadowOpacity": 127,
            "smoothed": true,
            "underlined": false,
            "text": "Refresh",
            "font": "Kenney Mini Square.ttf",
            "textAlignment": "center",
            "characterSize": 24,
            "color": "255;255;255"
          }
        },
        "Pressed": {
          "bottomMargin": 10,
          "height": 64,
          "leftMargin": 6,
          "rightMargin": 6,
          "texture": "Transparent Button With White Blue Border_Pressed.png",
          "tiled": false,
          "topMargin": 10,
          "width": 192
        }
      }
    },
    {
      "assetStoreId": "7f3b0673f7479b4b487bcbadbb3c8b9412a8e6d8694543f9ec3419365ebff3f5",
      "name": "check_saving_name",
      "type": "SpriteToggleSwitch::SpriteToggleSwitch",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "IsChecked": false
      },
      "childrenContent": {
        "State": {
          "adaptCollisionMaskAutomatically": false,
          "updateIfNotVisible": false,
          "animations": [
            {
              "name": "Unchecked",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Square White Toggle_Off.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "Checked",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Square White Toggle_On.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "TXT_host_config",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [
        {
          "folded": true,
          "name": "ID",
          "type": "string",
          "value": ""
        }
      ],
      "effects": [],
      "behaviors": [
        {
          "name": "ButtonFSM",
          "type": "ButtonStates::ButtonFSM",
          "ShouldCheckHovering": true,
          "State": "Idle",
          "TouchId": 0,
          "TouchIsInside": false,
          "MouseIsInside": false,
          "Index": 2.0247e-320
        },
        {
          "name": "ButtonObjectEffects",
          "type": "ButtonStates::ButtonObjectEffects",
          "ButtonFSM": "ButtonFSM",
          "Effect": "Effect",
          "IdleEffect": "",
          "FocusedEffect": "",
          "PressedEffect": ""
        },
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "string": "Text",
      "font": "",
      "textAlignment": "center",
      "characterSize": 48,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "content": {
        "bold": true,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "Text",
        "font": "",
        "textAlignment": "center",
        "characterSize": 48,
        "color": "255;255;255"
      }
    },
    {
      "assetStoreId": "",
      "name": "Input_password",
      "type": "TextInput::TextInputObject",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "initialValue": "",
        "placeholder": "password",
        "fontResourceName": "",
        "fontSize": 32,
        "inputType": "password",
        "textColor": "0;0;0",
        "fillColor": "255;255;255",
        "fillOpacity": 255,
        "borderColor": "0;0;0",
        "borderOpacity": 255,
        "borderWidth": 1,
        "readOnly": false,
        "disabled": false
      }
    },
    {
      "assetStoreId": "7f3b0673f7479b4b487bcbadbb3c8b9412a8e6d8694543f9ec3419365ebff3f5",
      "name": "check_saving_psw",
      "type": "SpriteToggleSwitch::SpriteToggleSwitch",
      "variables": [],
      "effects": [],
      "behaviors": [],
      "content": {
        "IsChecked": false
      },
      "childrenContent": {
        "State": {
          "adaptCollisionMaskAutomatically": false,
          "updateIfNotVisible": false,
          "animations": [
            {
              "name": "Unchecked",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Square White Toggle_Off.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            },
            {
              "name": "Checked",
              "useMultipleDirections": false,
              "directions": [
                {
                  "looping": false,
                  "timeBetweenFrames": 0.08,
                  "sprites": [
                    {
                      "hasCustomCollisionMask": false,
                      "image": "Square White Toggle_On.png",
                      "points": [],
                      "originPoint": {
                        "name": "origine",
                        "x": 0,
                        "y": 0
                      },
                      "centerPoint": {
                        "automatic": true,
                        "name": "centre",
                        "x": 0,
                        "y": 0
                      },
                      "customCollisionMask": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    {
      "assetStoreId": "",
      "bold": false,
      "italic": false,
      "name": "txt_auxiliar",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "string": "SAVE",
      "font": "",
      "textAlignment": "left",
      "characterSize": 48,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "content": {
        "bold": false,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "SAVE",
        "font": "",
        "textAlignment": "left",
        "characterSize": 48,
        "color": "255;255;255"
      }
    },
    {
      "adaptCollisionMaskAutomatically": true,
      "assetStoreId": "",
      "name": "NewSprite2",
      "type": "Sprite",
      "updateIfNotVisible": false,
      "variables": [],
      "effects": [],
      "behaviors": [],
      "animations": [
        {
          "name": "",
          "useMultipleDirections": false,
          "directions": [
            {
              "looping": false,
              "timeBetweenFrames": 0.08,
              "sprites": [
                {
                  "hasCustomCollisionMask": true,
                  "image": "sampleMap.png",
                  "points": [],
                  "originPoint": {
                    "name": "origine",
                    "x": 0,
                    "y": 0
                  },
                  "centerPoint": {
                    "automatic": true,
                    "name": "centre",
                    "x": 0,
                    "y": 0
                  },
                  "customCollisionMask": [
                    [
                      {
                        "x": 1,
                        "y": 27
                      },
                      {
                        "x": 960,
                        "y": 27
                      },
                      {
                        "x": 960,
                        "y": 989
                      },
                      {
                        "x": 1,
                        "y": 989
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "assetStoreId": "",
      "bold": true,
      "italic": false,
      "name": "TXT_host_config2",
      "smoothed": true,
      "type": "TextObject::Text",
      "underlined": false,
      "variables": [
        {
          "folded": true,
          "name": "ID",
          "type": "string",
          "value": ""
        }
      ],
      "effects": [],
      "behaviors": [
        {
          "name": "ButtonFSM",
          "type": "ButtonStates::ButtonFSM",
          "ShouldCheckHovering": true,
          "State": "Idle",
          "TouchId": 0,
          "TouchIsInside": false,
          "MouseIsInside": false,
          "Index": 2.0247e-320
        },
        {
          "name": "ButtonObjectEffects",
          "type": "ButtonStates::ButtonObjectEffects",
          "ButtonFSM": "ButtonFSM",
          "Effect": "Effect",
          "IdleEffect": "",
          "FocusedEffect": "",
          "PressedEffect": ""
        },
        {
          "name": "Tween",
          "type": "Tween::TweenBehavior"
        }
      ],
      "string": "Text",
      "font": "",
      "textAlignment": "center",
      "characterSize": 48,
      "color": {
        "b": 255,
        "g": 255,
        "r": 255
      },
      "content": {
        "bold": true,
        "isOutlineEnabled": false,
        "isShadowEnabled": false,
        "italic": false,
        "outlineColor": "255;255;255",
        "outlineThickness": 2,
        "shadowAngle": 90,
        "shadowBlurRadius": 2,
        "shadowColor": "0;0;0",
        "shadowDistance": 4,
        "shadowOpacity": 127,
        "smoothed": true,
        "underlined": false,
        "text": "Text",
        "font": "",
        "textAlignment": "center",
        "characterSize": 48,
        "color": "255;255;255"
      }
    }
  ],
  "objectsFolderStructure": {
    "folderName": "__ROOT",
    "children": [
      {
        "objectName": "TXT_Room"
      },
      {
        "objectName": "TXT_host_config"
      },
      {
        "objectName": "TXT_host_config2"
      },
      {
        "objectName": "Text_name"
      },
      {
        "objectName": "error"
      },
      {
        "objectName": "text_warning"
      },
      {
        "objectName": "button_host"
      },
      {
        "objectName": "button_ok"
      },
      {
        "objectName": "button_Room"
      },
      {
        "objectName": "button_Refresh"
      },
      {
        "objectName": "Input_name"
      },
      {
        "objectName": "Input_password"
      },
      {
        "objectName": "check_saving_name"
      },
      {
        "objectName": "check_saving_psw"
      },
      {
        "objectName": "txt_auxiliar"
      },
      {
        "objectName": "NewSprite2"
      }
    ]
  },
  "events": [
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Thnk",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "P2P::UseDefaultBroker"
              },
              "parameters": []
            },
            {
              "type": {
                "value": "HideLayer"
              },
              "parameters": [
                "",
                "\"hostconfig\""
              ]
            },
            {
              "type": {
                "value": "HideLayer"
              },
              "parameters": [
                "",
                "\"serverlist\""
              ]
            },
            {
              "type": {
                "value": "SetFullScreen"
              },
              "parameters": [
                "",
                "yes",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "P2P::OnError"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
              },
              "parameters": [
                "error",
                "Text",
                "=",
                "P2P::GetLastError()"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "Delete"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "DeleteGroupFichier"
              },
              "parameters": [
                "\"cache\"",
                "\"client_ifo\""
              ]
            },
            {
              "type": {
                "value": "Scene"
              },
              "parameters": [
                "",
                "\"Start Menu\"",
                "yes"
              ]
            }
          ]
        },
        {
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "P2P::OnError"
              },
              "parameters": []
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::Value"
                  },
                  "parameters": [
                    "error",
                    "Text",
                    "=",
                    "\"Conectando...\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Flash::Flash::Flash"
                  },
                  "parameters": [
                    "error",
                    "Flash",
                    "0",
                    ""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::Value"
                  },
                  "parameters": [
                    "error",
                    "Text",
                    "=",
                    "\"Conectado!\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextObject::ChangeColor"
                  },
                  "parameters": [
                    "error",
                    "\"133;255;0\""
                  ]
                },
                {
                  "type": {
                    "value": "Flash::Flash::Stop"
                  },
                  "parameters": [
                    "error",
                    "Flash",
                    "0"
                  ]
                }
              ]
            }
          ]
        },
        {
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "P2P::IsReady"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
              },
              "parameters": [
                "error",
                "Text",
                "=",
                "\"Conectando...\""
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                  },
                  "parameters": [
                    "button_host",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "text_warning",
                    "Text",
                    "=",
                    "\"Espere a conexão ser efetuada.\""
                  ]
                },
                {
                  "type": {
                    "value": "Wait"
                  },
                  "parameters": [
                    "1"
                  ]
                },
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "text_warning",
                    "Text",
                    "=",
                    "\"\""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                  },
                  "parameters": [
                    "button_Room",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "text_warning",
                    "Text",
                    "=",
                    "\"Espere a conexão ser efetuada.\""
                  ]
                },
                {
                  "type": {
                    "value": "Wait"
                  },
                  "parameters": [
                    "1"
                  ]
                },
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "text_warning",
                    "Text",
                    "=",
                    "\"\""
                  ]
                }
              ]
            }
          ]
        },
        {
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "P2P::IsReady"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
              },
              "parameters": [
                "error",
                "Text",
                "=",
                "\"Conectado!\""
              ]
            },
            {
              "type": {
                "value": "ModVarSceneTxt"
              },
              "parameters": [
                "Client.Session_ID",
                "=",
                "P2P::GetID()"
              ]
            },
            {
              "type": {
                "value": "ModVarSceneTxt"
              },
              "parameters": [
                "F_UID",
                "=",
                "Firebase::GetUserUID()"
              ]
            },
            {
              "type": {
                "value": "Firebase::AnonymousSignIn"
              },
              "parameters": [
                "return"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::JsCode",
              "inlineCode": [
                "var client_uid = runtimeScene.getVariables().get(\"F_UID\");",
                "const clean = firebase.database().ref(\"/Players/\"+(client_uid._str));",
                "clean.onDisconnect().set(\"\");"
              ],
              "parameterObjects": "",
              "useStrict": true,
              "eventsSheetExpanded": false
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "folded": true,
              "name": "buttons who need o p2p connected",
              "source": "",
              "type": "BuiltinCommonInstructions::Group",
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                          },
                          "parameters": [
                            "button_host",
                            ""
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ShowLayer"
                              },
                              "parameters": [
                                "",
                                "\"hostconfig\""
                              ]
                            },
                            {
                              "type": {
                                "value": "HideLayer"
                              },
                              "parameters": [
                                "",
                                "\"serverlist\""
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "folded": true,
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                          },
                          "parameters": [
                            "button_Refresh",
                            ""
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::Once"
                              },
                              "parameters": []
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                              },
                              "parameters": [
                                "text_warning",
                                "Text",
                                "=",
                                "\"buscando lista de servidores\""
                              ]
                            },
                            {
                              "type": {
                                "value": "P2P::DisconnectFromAll"
                              },
                              "parameters": []
                            },
                            {
                              "type": {
                                "value": "Wait"
                              },
                              "parameters": [
                                "0.2"
                              ]
                            },
                            {
                              "type": {
                                "value": "P2P::UseDefaultBroker"
                              },
                              "parameters": []
                            },
                            {
                              "type": {
                                "value": "Wait"
                              },
                              "parameters": [
                                "2"
                              ]
                            },
                            {
                              "type": {
                                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                              },
                              "parameters": [
                                "text_warning",
                                "Text",
                                "=",
                                "\"\""
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Repeat",
                          "repeatExpression": "VariableChildCount(ServerList.Rooms)",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "SceneVariableRemoveAt"
                              },
                              "parameters": [
                                "ServerList.Rooms",
                                "VariableChildCount(ServerList.Rooms)-1"
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::Once"
                              },
                              "parameters": []
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "Firebase::DatabaseGetVariable"
                              },
                              "parameters": [
                                "\"/Players\"",
                                "ServerList.Root[0]",
                                "return"
                              ]
                            },
                            {
                              "type": {
                                "value": "ShowLayer"
                              },
                              "parameters": [
                                "",
                                "\"serverlist\""
                              ]
                            },
                            {
                              "type": {
                                "value": "HideLayer"
                              },
                              "parameters": [
                                "",
                                "\"hostconfig\""
                              ]
                            }
                          ],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "Wait"
                                  },
                                  "parameters": [
                                    "0.25"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ArrayTools::Slice"
                                  },
                                  "parameters": [
                                    "",
                                    "ServerList.Root[0]",
                                    "ServerList.Rooms",
                                    "0",
                                    "VariableChildCount(ServerList.Root[0])",
                                    ""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "VariableClearChildren"
                                  },
                                  "parameters": [
                                    "ServerList.Root"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Comment",
                                  "color": {
                                    "b": 134,
                                    "g": 233,
                                    "r": 184,
                                    "textB": 0,
                                    "textG": 0,
                                    "textR": 0
                                  },
                                  "comment": "clean empty variables"
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Repeat",
                                  "repeatExpression": "VariableChildCount(ServerList.Rooms)",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::Or"
                                      },
                                      "parameters": [],
                                      "subInstructions": [
                                        {
                                          "type": {
                                            "value": "ArrayTools::HasString"
                                          },
                                          "parameters": [
                                            "",
                                            "ServerList.Rooms",
                                            "\"\"",
                                            "ServerList.Pool"
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ArrayTools::Pop"
                                      },
                                      "parameters": [
                                        "",
                                        "ServerList.Rooms",
                                        "ServerList.temp",
                                        ""
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Or"
                                          },
                                          "parameters": [],
                                          "subInstructions": [
                                            {
                                              "type": {
                                                "value": "VarSceneTxt"
                                              },
                                              "parameters": [
                                                "ServerList.temp",
                                                "!=",
                                                "\"\""
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ArrayTools::InsertAt"
                                          },
                                          "parameters": [
                                            "",
                                            "ServerList.Rooms",
                                            "0",
                                            "ServerList.temp",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "ServerList.temp",
                                        "\"Session_ID\""
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::And"
                                          },
                                          "parameters": [],
                                          "subInstructions": [
                                            {
                                              "type": {
                                                "value": "VarSceneTxt"
                                              },
                                              "parameters": [
                                                "ServerList.temp.Session_ID",
                                                "!=",
                                                "VariableString(Client.Session_ID)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "VarScene"
                                              },
                                              "parameters": [
                                                "ServerList.temp.Session_ID",
                                                "!=",
                                                "0"
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ArrayTools::InsertAt"
                                          },
                                          "parameters": [
                                            "",
                                            "ServerList.Rooms",
                                            "0",
                                            "ServerList.temp",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [
                        {
                          "type": {
                            "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                          },
                          "parameters": [
                            "button_Room",
                            ""
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "BuiltinCommonInstructions::Once"
                              },
                              "parameters": []
                            }
                          ],
                          "actions": [
                            {
                              "type": {
                                "value": "Firebase::DatabaseGetVariable"
                              },
                              "parameters": [
                                "\"/Players\"",
                                "ServerList.Root[0]",
                                "return"
                              ]
                            },
                            {
                              "type": {
                                "value": "ShowLayer"
                              },
                              "parameters": [
                                "",
                                "\"serverlist\""
                              ]
                            },
                            {
                              "type": {
                                "value": "HideLayer"
                              },
                              "parameters": [
                                "",
                                "\"hostconfig\""
                              ]
                            }
                          ],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [],
                              "actions": [
                                {
                                  "type": {
                                    "value": "Wait"
                                  },
                                  "parameters": [
                                    "0.25"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ArrayTools::Slice"
                                  },
                                  "parameters": [
                                    "",
                                    "ServerList.Root[0]",
                                    "ServerList.Rooms",
                                    "0",
                                    "VariableChildCount(ServerList.Root[0])",
                                    ""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "VariableClearChildren"
                                  },
                                  "parameters": [
                                    "ServerList.Root"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Comment",
                                  "color": {
                                    "b": 134,
                                    "g": 233,
                                    "r": 184,
                                    "textB": 0,
                                    "textG": 0,
                                    "textR": 0
                                  },
                                  "comment": "clean empty variables"
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Repeat",
                                  "repeatExpression": "VariableChildCount(ServerList.Rooms)",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "BuiltinCommonInstructions::Or"
                                      },
                                      "parameters": [],
                                      "subInstructions": [
                                        {
                                          "type": {
                                            "value": "ArrayTools::HasString"
                                          },
                                          "parameters": [
                                            "",
                                            "ServerList.Rooms",
                                            "\"\"",
                                            "ServerList.Pool"
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "actions": [
                                    {
                                      "type": {
                                        "value": "ArrayTools::Pop"
                                      },
                                      "parameters": [
                                        "",
                                        "ServerList.Rooms",
                                        "ServerList.temp",
                                        ""
                                      ]
                                    }
                                  ],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Or"
                                          },
                                          "parameters": [],
                                          "subInstructions": [
                                            {
                                              "type": {
                                                "value": "VarSceneTxt"
                                              },
                                              "parameters": [
                                                "ServerList.temp",
                                                "!=",
                                                "\"\""
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ArrayTools::InsertAt"
                                          },
                                          "parameters": [
                                            "",
                                            "ServerList.Rooms",
                                            "0",
                                            "ServerList.temp",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "folded": true,
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "VariableChildExists"
                                      },
                                      "parameters": [
                                        "ServerList.temp",
                                        "\"Session_ID\""
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::And"
                                          },
                                          "parameters": [],
                                          "subInstructions": [
                                            {
                                              "type": {
                                                "value": "VarSceneTxt"
                                              },
                                              "parameters": [
                                                "ServerList.temp.Session_ID",
                                                "!=",
                                                "VariableString(Client.Session_ID)"
                                              ]
                                            },
                                            {
                                              "type": {
                                                "value": "VarScene"
                                              },
                                              "parameters": [
                                                "ServerList.temp.Session_ID",
                                                "!=",
                                                "0"
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "ArrayTools::InsertAt"
                                          },
                                          "parameters": [
                                            "",
                                            "ServerList.Rooms",
                                            "0",
                                            "ServerList.temp",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BuiltinCommonInstructions::JsCode",
                                  "inlineCode": [
                                    "var client_uid = runtimeScene.getVariables().get(\"F_UID\");",
                                    "const clean = firebase.database().ref(\"/Players/\"+(client_uid._str));",
                                    "clean.onDisconnect().delete;"
                                  ],
                                  "parameterObjects": "",
                                  "useStrict": true,
                                  "eventsSheetExpanded": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "colorB": 228,
                  "colorG": 176,
                  "colorR": 74,
                  "creationTime": 0,
                  "name": "Rooms",
                  "source": "",
                  "type": "BuiltinCommonInstructions::Group",
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 109,
                        "g": 230,
                        "r": 255,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "Annimation"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableChildCount"
                              },
                              "parameters": [
                                "ServerList.Rooms",
                                "=",
                                "0"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "0"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Empty\""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "\"0\""
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "1"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Empty\""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "\"0\""
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "2"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Empty\""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "\"0\""
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "3"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Empty\""
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "\"0\""
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableChildCount"
                              },
                              "parameters": [
                                "ServerList.Rooms",
                                ">=",
                                "1"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "0"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Sala de \"+ServerList.Rooms[0].Name"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "ServerList.Rooms[0].Session_ID"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "folded": true,
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableChildCount"
                              },
                              "parameters": [
                                "ServerList.Rooms",
                                ">=",
                                "2"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "1"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Sala de \"+ServerList.Rooms[1].Name"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "ServerList.Rooms[1].Session_ID"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableChildCount"
                              },
                              "parameters": [
                                "ServerList.Rooms",
                                ">=",
                                "3"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "2"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Sala de \"+ServerList.Rooms[2].Name"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "ServerList.Rooms[2].Session_ID"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "SceneVariableChildCount"
                              },
                              "parameters": [
                                "ServerList.Rooms",
                                ">=",
                                "4"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "Plan"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "=",
                                    "3"
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Text",
                                    "=",
                                    "\"Sala de \"+ServerList.Rooms[3].Name"
                                  ]
                                },
                                {
                                  "type": {
                                    "value": "ModVarObjetTxt"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ID",
                                    "=",
                                    "ServerList.Rooms[3].Session_ID"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::Standard",
                      "conditions": [],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [
                            {
                              "type": {
                                "value": "Visible"
                              },
                              "parameters": [
                                "TXT_Room"
                              ]
                            }
                          ],
                          "actions": [],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "ButtonStates::ButtonFSM::IsPressed"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ButtonFSM",
                                    ""
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "Tween::TweenBehavior::AddObjectScaleTween2"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Tween",
                                    "\"in\"",
                                    "0.5",
                                    "0.5",
                                    "\"easeInQuad\"",
                                    "0.03",
                                    "",
                                    "yes"
                                  ]
                                }
                              ],
                              "events": [
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableChildCount"
                                      },
                                      "parameters": [
                                        "ServerList.Rooms",
                                        ">=",
                                        "1"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::Value"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Plan"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "=",
                                            "0"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "inverted": true,
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "ID",
                                            "=",
                                            "\"0\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Once"
                                          },
                                          "parameters": []
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"entrando na sala.\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.1"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"entrando na sala..\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.1"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"entrando na sala...\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.3"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "THNK_P2P::ConnectToServer"
                                          },
                                          "parameters": [
                                            "",
                                            "TXT_Room.VariableString(ID)",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableChildCount"
                                      },
                                      "parameters": [
                                        "ServerList.Rooms",
                                        ">=",
                                        "2"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::Value"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Plan"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "=",
                                            "1"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "inverted": true,
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "ID",
                                            "=",
                                            "\"0\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Once"
                                          },
                                          "parameters": []
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.5"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "THNK_P2P::ConnectToServer"
                                          },
                                          "parameters": [
                                            "",
                                            "TXT_Room.VariableString(ID)",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableChildCount"
                                      },
                                      "parameters": [
                                        "ServerList.Rooms",
                                        ">=",
                                        "3"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::Value"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Plan"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "=",
                                            "2"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "inverted": true,
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "ID",
                                            "=",
                                            "\"0\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Once"
                                          },
                                          "parameters": []
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.5"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "THNK_P2P::ConnectToServer"
                                          },
                                          "parameters": [
                                            "",
                                            "TXT_Room.VariableString(ID)",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "BuiltinCommonInstructions::Standard",
                                  "conditions": [
                                    {
                                      "type": {
                                        "value": "SceneVariableChildCount"
                                      },
                                      "parameters": [
                                        "ServerList.Rooms",
                                        ">=",
                                        "4"
                                      ]
                                    }
                                  ],
                                  "actions": [],
                                  "events": [
                                    {
                                      "type": "BuiltinCommonInstructions::Standard",
                                      "conditions": [
                                        {
                                          "type": {
                                            "value": "TextContainerCapability::TextContainerBehavior::Value"
                                          },
                                          "parameters": [
                                            "text_warning",
                                            "Text",
                                            "=",
                                            "\"\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "Plan"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "=",
                                            "3"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "inverted": true,
                                            "value": "VarObjetTxt"
                                          },
                                          "parameters": [
                                            "TXT_Room",
                                            "ID",
                                            "=",
                                            "\"0\""
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "BuiltinCommonInstructions::Once"
                                          },
                                          "parameters": []
                                        }
                                      ],
                                      "actions": [
                                        {
                                          "type": {
                                            "value": "Wait"
                                          },
                                          "parameters": [
                                            "0.5"
                                          ]
                                        },
                                        {
                                          "type": {
                                            "value": "THNK_P2P::ConnectToServer"
                                          },
                                          "parameters": [
                                            "",
                                            "TXT_Room.VariableString(ID)",
                                            ""
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "inverted": true,
                                    "value": "ButtonStates::ButtonFSM::IsPressed"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "ButtonFSM",
                                    "="
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "Tween::TweenBehavior::AddObjectScaleTween2"
                                  },
                                  "parameters": [
                                    "TXT_Room",
                                    "Tween",
                                    "\"out\"",
                                    "1",
                                    "1",
                                    "\"easeInQuad\"",
                                    "0.03",
                                    "",
                                    "yes"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "parameters": []
                }
              ],
              "parameters": []
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": ""
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "GroupExists"
              },
              "parameters": [
                "\"cache\"",
                "\"client_ifo\""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "LireFichierTxt"
              },
              "parameters": [
                "\"cache\"",
                "\"client_ifo\"",
                "",
                "Client.Name"
              ]
            },
            {
              "type": {
                "value": "Wait"
              },
              "parameters": [
                "0.1"
              ]
            },
            {
              "type": {
                "value": "ModVarGlobalTxt"
              },
              "parameters": [
                "nickname",
                "=",
                "VariableString(Client.Name)"
              ]
            },
            {
              "type": {
                "value": "BuiltinExternalLayouts::CreateObjectsFromExternalLayout"
              },
              "parameters": [
                "",
                "\"mainmenu\"",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "value": "Delete"
              },
              "parameters": [
                "button_ok",
                ""
              ]
            },
            {
              "type": {
                "value": "Delete"
              },
              "parameters": [
                "Input_name",
                ""
              ]
            },
            {
              "type": {
                "value": "Delete"
              },
              "parameters": [
                "DefaultBBText",
                ""
              ]
            },
            {
              "type": {
                "value": "Delete"
              },
              "parameters": [
                "check_saving_name",
                ""
              ]
            },
            {
              "type": {
                "value": "Delete"
              },
              "parameters": [
                "DefaultBBText",
                ""
              ]
            },
            {
              "type": {
                "value": "HideLayer"
              },
              "parameters": [
                "",
                "\"serverlist\""
              ]
            },
            {
              "type": {
                "value": "ShowLayer"
              },
              "parameters": [
                "",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "inverted": true,
                "value": "GroupExists"
              },
              "parameters": [
                "\"cache\"",
                "\"client_ifo\""
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "HideLayer"
              },
              "parameters": [
                "",
                "\"serverlist\""
              ]
            },
            {
              "type": {
                "value": "ShowLayer"
              },
              "parameters": [
                "",
                ""
              ]
            }
          ]
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Button and Textentry Configs",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PanelSpriteButton::PanelSpriteButton::IsPressed"
                  },
                  "parameters": [
                    "button_ok",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [],
              "events": [
                {
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarSceneTxt"
                      },
                      "parameters": [
                        "Client.Name",
                        "=",
                        "Input_name.Text::Value()"
                      ]
                    },
                    {
                      "type": {
                        "value": "Wait"
                      },
                      "parameters": [
                        "0.2"
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "button_ok",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "Input_name",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinExternalLayouts::CreateObjectsFromExternalLayout"
                      },
                      "parameters": [
                        "",
                        "\"mainmenu\"",
                        "",
                        "",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "PrioritizeLoadingOfScene"
                      },
                      "parameters": [
                        "",
                        "\"Game(thnk)\""
                      ]
                    }
                  ],
                  "events": [
                    {
                      "type": "BuiltinCommonInstructions::Comment",
                      "color": {
                        "b": 134,
                        "g": 233,
                        "r": 184,
                        "textB": 0,
                        "textG": 0,
                        "textR": 0
                      },
                      "comment": "clean empty variables"
                    },
                    {
                      "type": "BuiltinCommonInstructions::Repeat",
                      "repeatExpression": "VariableChildCount(ServerList.Rooms)",
                      "conditions": [
                        {
                          "type": {
                            "value": "ArrayTools::HasString"
                          },
                          "parameters": [
                            "",
                            "ServerList.Rooms",
                            "\"\"",
                            "ServerList.Pool"
                          ]
                        }
                      ],
                      "actions": [],
                      "events": [
                        {
                          "type": "BuiltinCommonInstructions::Standard",
                          "conditions": [],
                          "actions": [
                            {
                              "type": {
                                "value": "ArrayTools::Pop"
                              },
                              "parameters": [
                                "",
                                "ServerList.Rooms",
                                "ServerList.temp",
                                ""
                              ]
                            }
                          ],
                          "events": [
                            {
                              "type": "BuiltinCommonInstructions::Standard",
                              "conditions": [
                                {
                                  "type": {
                                    "value": "VarSceneTxt"
                                  },
                                  "parameters": [
                                    "ServerList.temp",
                                    "!=",
                                    "\"\""
                                  ]
                                }
                              ],
                              "actions": [
                                {
                                  "type": {
                                    "value": "ArrayTools::InsertAt"
                                  },
                                  "parameters": [
                                    "",
                                    "ServerList.Rooms",
                                    "0",
                                    "ServerList.temp",
                                    ""
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "BuiltinCommonInstructions::JsCode",
                      "inlineCode": [
                        "var client_uid = runtimeScene.getVariables().get(\"F_UID\");",
                        "const clean = firebase.database().ref(\"/Players/\"+(client_uid._str));",
                        "clean.onDisconnect().set(\"\");"
                      ],
                      "parameterObjects": "",
                      "useStrict": true,
                      "eventsSheetExpanded": false
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "SpriteToggleSwitch::SpriteToggleSwitch::IsChecked"
                      },
                      "parameters": [
                        "check_saving_name",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "EcrireFichierTxt"
                      },
                      "parameters": [
                        "\"cache\"",
                        "\"client_ifo\"",
                        "VariableString(Client.Name)"
                      ]
                    },
                    {
                      "type": {
                        "value": "Wait"
                      },
                      "parameters": [
                        "0.2"
                      ]
                    },
                    {
                      "type": {
                        "value": "ModVarGlobalTxt"
                      },
                      "parameters": [
                        "nickname",
                        "=",
                        "VariableString(Client.Name)"
                      ]
                    }
                  ]
                },
                {
                  "disabled": true,
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "GroupExists"
                      },
                      "parameters": [
                        "\"cache\"",
                        "\"psw\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "SpriteToggleSwitch::SpriteToggleSwitch::SetChecked"
                      },
                      "parameters": [
                        "check_saving_psw",
                        "",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "LireFichierTxt"
                      },
                      "parameters": [
                        "\"cache\"",
                        "\"psw\"",
                        "",
                        "temp2"
                      ]
                    },
                    {
                      "type": {
                        "value": "Wait"
                      },
                      "parameters": [
                        "0.2"
                      ]
                    },
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "Input_password",
                        "Text",
                        "=",
                        "VariableString(temp2)"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "folded": true,
          "name": "text",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "Text_name",
                    "Text",
                    "=",
                    "\"Olá \"+VariableString(Client.Name)"
                  ]
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    },
    {
      "folded": true,
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "value": "ButtonStates::ButtonFSM::IsPressed"
          },
          "parameters": [
            "TXT_host_config",
            "ButtonFSM",
            "="
          ]
        },
        {
          "type": {
            "value": "BuiltinCommonInstructions::Once"
          },
          "parameters": []
        }
      ],
      "actions": [],
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Plan"
              },
              "parameters": [
                "TXT_host_config",
                "=",
                "0"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Firebase::DatabaseWriteVariable"
              },
              "parameters": [
                "\"/Players/\"+Firebase::GetUserUID()",
                "Client",
                "return"
              ]
            },
            {
              "type": {
                "value": "Wait"
              },
              "parameters": [
                "0.2"
              ]
            },
            {
              "type": {
                "value": "THNK_P2P::StartServer"
              },
              "parameters": [
                "",
                "\"Game(thnk)\"",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Plan"
              },
              "parameters": [
                "TXT_host_config",
                "=",
                "1"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "ModVarGlobal"
              },
              "parameters": [
                "Gamemode",
                "=",
                "1"
              ]
            },
            {
              "type": {
                "value": "Wait"
              },
              "parameters": [
                "0.2"
              ]
            },
            {
              "type": {
                "value": "THNK_P2P::StartServer"
              },
              "parameters": [
                "",
                "\"Game(thnk)\"",
                ""
              ]
            },
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
              },
              "parameters": [
                "TXT_host_config",
                "Text",
                "=",
                "\"construct mode\""
              ]
            }
          ]
        },
        {
          "disabled": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Plan"
              },
              "parameters": [
                "TXT_host_config",
                "=",
                "1"
              ]
            },
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::Value"
              },
              "parameters": [
                "Input_password",
                "Text",
                "!=",
                "\"\""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::CompareNumbers"
              },
              "parameters": [
                "StrLength(Input_password.Text::Value())",
                ">=",
                "6"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "P2P::DisconnectFromAll"
              },
              "parameters": []
            },
            {
              "type": {
                "value": "P2P::OverrideID"
              },
              "parameters": [
                "VariableString(Client.Session_ID)+\"-\"+VariableString(Client.Name)+Input_password.Text::Value()"
              ]
            },
            {
              "type": {
                "value": "P2P::UseDefaultBroker"
              },
              "parameters": []
            },
            {
              "type": {
                "value": "ModVarSceneTxt"
              },
              "parameters": [
                "Variable",
                "=",
                "Input_password.Text::Value()"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "P2P::IsReady"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Firebase::DatabaseWriteVariable"
                  },
                  "parameters": [
                    "\"/Players/\"+Firebase::GetUserUID()",
                    "Client",
                    "return"
                  ]
                },
                {
                  "type": {
                    "value": "Wait"
                  },
                  "parameters": [
                    "0.2"
                  ]
                }
              ]
            }
          ]
        },
        {
          "disabled": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Plan"
              },
              "parameters": [
                "TXT_host_config",
                "=",
                "1"
              ]
            },
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::Value"
              },
              "parameters": [
                "Input_password",
                "Text",
                "!=",
                "\"\""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::CompareNumbers"
              },
              "parameters": [
                "StrLength(Input_password.Text::Value())",
                ">=",
                "6"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
              },
              "parameters": [
                "TXT_host_config",
                "Text",
                "=",
                "\"tamanho minimo 6 caracteres\""
              ]
            },
            {
              "type": {
                "value": "Wait"
              },
              "parameters": [
                "0.5"
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [
        {
          "type": {
            "inverted": true,
            "value": "ButtonStates::ButtonFSM::IsPressed"
          },
          "parameters": [
            "TXT_host_config",
            "ButtonFSM",
            "="
          ]
        }
      ],
      "actions": [
        {
          "type": {
            "value": "Tween::TweenBehavior::AddObjectScaleTween2"
          },
          "parameters": [
            "TXT_host_config",
            "Tween",
            "\"in\"",
            "0.5",
            "0.5",
            "\"easeInQuad\"",
            "0.03",
            "",
            "yes"
          ]
        },
        {
          "type": {
            "value": "Tween::TweenBehavior::AddObjectScaleTween2"
          },
          "parameters": [
            "TXT_host_config",
            "Tween",
            "\"out\"",
            "1",
            "1",
            "\"easeInQuad\"",
            "0.03",
            "",
            "yes"
          ]
        }
      ],
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Plan"
              },
              "parameters": [
                "TXT_host_config",
                "=",
                "0"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Wait"
              },
              "parameters": [
                "0.5"
              ]
            },
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
              },
              "parameters": [
                "TXT_host_config",
                "Text",
                "=",
                "\"Public\""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "Plan"
              },
              "parameters": [
                "TXT_host_config",
                "=",
                "1"
              ]
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Wait"
              },
              "parameters": [
                "0.5"
              ]
            },
            {
              "type": {
                "value": "TextContainerCapability::TextContainerBehavior::SetValue"
              },
              "parameters": [
                "TXT_host_config",
                "Text",
                "=",
                "\"construct mode\""
              ]
            }
          ]
        }
      ]
    },
    {
      "disabled": true,
      "type": "BuiltinCommonInstructions::Standard",
      "conditions": [],
      "actions": [
        {
          "type": {
            "value": "SetWindowSize"
          },
          "parameters": [
            "",
            "320",
            "180",
            ""
          ]
        }
      ]
    }
  ],
  "layers": [
    {
      "ambientLightColorB": 200,
      "ambientLightColorG": 200,
      "ambientLightColorR": 200,
      "camera3DFarPlaneDistance": 10000,
      "camera3DFieldOfView": 45,
      "camera3DNearPlaneDistance": 3,
      "cameraType": "perspective",
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "isLocked": false,
      "name": "",
      "renderingType": "",
      "visibility": true,
      "cameras": [
        {
          "defaultSize": true,
          "defaultViewport": true,
          "height": 0,
          "viewportBottom": 1,
          "viewportLeft": 0,
          "viewportRight": 1,
          "viewportTop": 0,
          "width": 0
        }
      ],
      "effects": [
        {
          "effectType": "Scene3D::HemisphereLight",
          "name": "3D Light",
          "doubleParameters": {
            "elevation": 45,
            "intensity": 1,
            "rotation": 0
          },
          "stringParameters": {
            "groundColor": "64;64;64",
            "skyColor": "255;255;255",
            "top": "Y-"
          },
          "booleanParameters": {}
        }
      ]
    },
    {
      "ambientLightColorB": 200,
      "ambientLightColorG": 200,
      "ambientLightColorR": 200,
      "camera3DFarPlaneDistance": 10000,
      "camera3DFieldOfView": 45,
      "camera3DNearPlaneDistance": 3,
      "cameraType": "perspective",
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "isLocked": false,
      "name": "serverlist",
      "renderingType": "",
      "visibility": true,
      "cameras": [],
      "effects": [
        {
          "effectType": "Scene3D::HemisphereLight",
          "name": "3D Light",
          "doubleParameters": {
            "elevation": 45,
            "intensity": 1,
            "rotation": 0
          },
          "stringParameters": {
            "groundColor": "64;64;64",
            "skyColor": "255;255;255",
            "top": "Y-"
          },
          "booleanParameters": {}
        }
      ]
    },
    {
      "ambientLightColorB": 200,
      "ambientLightColorG": 200,
      "ambientLightColorR": 200,
      "camera3DFarPlaneDistance": 10000,
      "camera3DFieldOfView": 45,
      "camera3DNearPlaneDistance": 3,
      "cameraType": "perspective",
      "followBaseLayerCamera": false,
      "isLightingLayer": false,
      "isLocked": false,
      "name": "hostconfig",
      "renderingType": "",
      "visibility": true,
      "cameras": [],
      "effects": [
        {
          "effectType": "Scene3D::HemisphereLight",
          "name": "3D Light",
          "doubleParameters": {
            "elevation": 45,
            "intensity": 1,
            "rotation": 0
          },
          "stringParameters": {
            "groundColor": "64;64;64",
            "skyColor": "255;255;255",
            "top": "Y-"
          },
          "booleanParameters": {}
        }
      ]
    }
  ],
  "behaviorsSharedData": [
    {
      "name": "Animation",
      "type": "AnimatableCapability::AnimatableBehavior"
    },
    {
      "name": "ButtonFSM",
      "type": "ButtonStates::ButtonFSM"
    },
    {
      "name": "ButtonObjectEffects",
      "type": "ButtonStates::ButtonObjectEffects"
    },
    {
      "name": "Effect",
      "type": "EffectCapability::EffectBehavior"
    },
    {
      "name": "Flash",
      "type": "Flash::Flash"
    },
    {
      "name": "Flippable",
      "type": "FlippableCapability::FlippableBehavior"
    },
    {
      "name": "Opacity",
      "type": "OpacityCapability::OpacityBehavior"
    },
    {
      "name": "Resizable",
      "type": "ResizableCapability::ResizableBehavior"
    },
    {
      "name": "Scale",
      "type": "ScalableCapability::ScalableBehavior"
    },
    {
      "name": "Text",
      "type": "TextContainerCapability::TextContainerBehavior"
    },
    {
      "name": "Tween",
      "type": "Tween::TweenBehavior"
    }
  ]
}